substitutions:
  device_name: "Athom-LB14-ESP"
  friendly_name: "Athom-LB14-ESP"
  device_description: "Athom 5w RGBCW Light Bulb E14"
  icon: "mdi:lamp"


globals:
  - id: fast_boot
    type: int
    restore_value: yes
    initial_value: '0'

  - id: restore_mode
    type: int
    restore_value: yes
    initial_value: "1"

select:
  - platform: template
    name: "Power On State"
    id: "power_mode"
    optimistic: true
    options:
      - Always Off
      - Always On
      - Restore Power Off State
    on_value:
      then:
        - lambda: |-
            id(restore_mode)=i+1;

esphome:
  name: "${device_name}"
  #friendly_name: "${friendly_name}"
  comment: "${device_description}"
  name_add_mac_suffix: false
  min_version: 2024.6.0
  on_boot:
      then:
        - script.execute: fast_boot_script
        - select.set_index:
            id: power_mode
            index: !lambda |-
                    return id(restore_mode)-1;
        - lambda: |-
              switch(id(restore_mode))
              {
              case 1:{
                      auto call = id(rgbct_light).turn_off();
                      call.perform();
                      break;
                      }
              case 2:{
                      auto call = id(rgbct_light).turn_on();
                      call.set_color_mode(ColorMode::WHITE);
                      call.set_brightness(1.0);
                      call.perform();
                      break;
                      }
              default:{
                      break;
                      }
              }

esp8266:
  board: esp8285
  restore_from_flash: true

preferences:
  flash_write_interval: 1min

api:

ota:
  - platform: esphome

# Enable logging
logger:
  level: DEBUG
  baud_rate: 115200

safe_mode:
  disabled: true

mdns:
  disabled: false

web_server:
  port: 80
  local: true
  ota: false
  include_internal: false

network:
  enable_ipv6: false
  min_ipv6_addr_count: 2

wifi:
  # This spawns an AP with the device name and mac address with no password.
  ap: # Enable fallback hotspot (captive portal) in case wifi connection fails
    ssid: "Athom-LB14-ESP Hotspot"
    password: !secret hotspot_password
  # Allow rapid re-connection to previously connect WiFi SSID, skipping scan of all SSID
  fast_connect: true
  power_save_mode: none
  output_power: 20.0
  networks:
  - ssid: !secret wifi_ssid
    password: !secret wifi_password
  use_address: 172.16.1.43

captive_portal:

sensor:
  - platform: uptime
    name: "Uptime Sensor"
    id: uptime_sensor
    entity_category: diagnostic
    internal: false

  - platform: wifi_signal
    name: "WiFi Signal dB"
    id: wifi_signal_db
    update_interval: 60s
    entity_category: "diagnostic"

  - platform: copy
    source_id: wifi_signal_db
    name: "WiFi Signal Percent"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "Signal %"
    entity_category: "diagnostic"
    device_class: ""

button:
  - platform: restart
    name: "Restart"
    entity_category: config

  - platform: factory_reset
    name: "Factory Reset"
    id: Reset
    entity_category: config

output:
  - platform: esp8266_pwm
    id: red_output
    pin: GPIO4
    min_power: 0.000499
    max_power: 1
    zero_means_zero: true
  - platform: esp8266_pwm
    id: green_output
    pin: GPIO12
    min_power: 0.000499
    max_power: 1
    zero_means_zero: true
  - platform: esp8266_pwm
    id: blue_output
    pin: GPIO14
    min_power: 0.000499
    max_power: 1
    zero_means_zero: true
  - platform: esp8266_pwm
    id: white_output
    pin: GPIO5
    min_power: 0.01
    max_power: 0.9
    zero_means_zero: true
  - platform: esp8266_pwm
    id: ct_output
    inverted: true
    pin: GPIO13
    min_power: 0.01
    max_power: 0.9
    zero_means_zero: true

light:
  - platform: rgbct
    id: rgbct_light
    name: "${friendly_name}"
    icon: "mdi:lamp"
    restore_mode: RESTORE_DEFAULT_ON
    red: red_output
    green: green_output
    blue: blue_output
    white_brightness: white_output
    color_temperature: ct_output
    cold_white_color_temperature: 153 mireds
    warm_white_color_temperature: 500 mireds
    color_interlock: true

text_sensor:
  - platform: wifi_info
    ip_address:
      name: "IP Address"
      entity_category: diagnostic
    ssid:
      name: "Connected SSID"
      entity_category: diagnostic
    mac_address:
      name: "Mac Address"
      entity_category: diagnostic

time:
  - platform: homeassistant
    id: homeassistant_time

script:
  - id: fast_boot_script
    then:
      - if:
          condition:
            lambda: return ( id(fast_boot) >= 3 );
          then:
            - lambda: |-
                ESP_LOGD("athom-rgbct-light.yaml", "Now the counter is greater than or equal to 3, perform reset device and reboot");
                id(fast_boot) = 0;
                fast_boot->loop();
                global_preferences->sync();
                auto call = id(rgbct_light).turn_on();
                call.set_transition_length(500);
                call.set_brightness(1.0);
                call.set_color_mode(ColorMode::RGB);
                call.set_rgb(0.0, 0.0, 1.0);
                call.perform();
            - delay: 5s
            - button.press: Reset
      - lambda: |-
          id(fast_boot) += 1;
          fast_boot->loop();
          global_preferences->sync();
          ESP_LOGD("athom-rgbct-light.yaml", "Now the counter is %d.  Reset the device when the counter is greater than or equal to 3", id(fast_boot));
      - delay: 10s
      - lambda: |-
          ESP_LOGD("athom-rgbct-light.yaml", "Reset counter");
          id(fast_boot) = 0;
          fast_boot->loop();
          global_preferences->sync();